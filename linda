# file: linda
# Copyright (c) 2023 Yamir Encarnacion using an MIT License 
# The acronym "LINDA" stands for "Large language model Imperfect Non-Deterministic Algorithm"

# The code in this file was inpired by https://github.com/MxDkl/pls
# which was Copyright (c) 2023 Max Dekel using an MIT License

#!/bin/bash

n_with_tilde=$'\xc3\xb1'

source ~/.linda-config
token=$api_key

DEBUG=0
COMMAND_MODE=0
SPANISH_MODE=0

while getopts ":cdsh" opt; do
  case $opt in
    c)
      COMMAND_MODE=1
      ;;
    s)
      SPANISH_MODE=1
      ;;
    d)
      DEBUG=1
      ;;
    h)
      echo "linda <your question>:"
      echo "linda -c <your command in natural language>"
      echo "linda -c -s <tu comando en Espa${n_with_tilde}ol>"
      exit 0
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

shift $((OPTIND - 1))

# Check if no arguments were provided
if [ $# -eq 0 ]; then
  echo "linda <your question>:"
  echo "linda -c <your command>"
  echo "linda -c -s <tu comando en Espa${n_with_tilde}ol>"
  exit 0
fi

# get user cli arguments as a string
args=$*

# save the current working directory to a variable
cwd=$(pwd)

# save os name to a variable
os=$(cat /etc/*-release | grep "NAME" -m 1 | cut -d "=" -f 2 | sed 's/"//g' | tr ' ' '_')

# disable globbing, to prevent OpenAI's command from being prematurely expanded
set -f

if [ $COMMAND_MODE -eq 1 ] && [ $SPANISH_MODE -eq 0 ]; then
  prompt="You are a helpful assistant. You will generate '$SHELL' commands based on user input. Your response should contain ONLY the command and NO explanation. Do NOT ever use newlines to separate commands, instead use ; or &&. The operating system is '$os' The current working directory is '$cwd' Input: '$args'"
elif [ $COMMAND_MODE -eq 1 ] && [ $SPANISH_MODE -eq 1 ]; then
  prompt="Eres un asistente util. Generaras comandos de '$SHELL' basados en la entrada del usuario. Tu respuesta debe contener SOLO el comando y SIN explicaciones. NO utilices nunca saltos de linea para separar comandos, en su lugar usa ; o &&. El sistema operativo es '$os' El directorio de trabajo actual es '$cwd' Entrada: '$args'"
else
  prompt="You are a helpful assistant. You will generate an answer to a query based on user input. Your response should take into consideration that the user is using '$SHELL' the operating system is '$os' The current working directory is '$cwd' Input: '$args'"
fi

# Execute curl command and save the response
response=$(curl -s "https://api.openai.com/v1/completions" -H "Content-Type: application/json" -H "Authorization: Bearer $token" --data-binary @- <<< "{\"model\": \"gpt-3.5-turbo-instruct\", \"prompt\": \"$prompt\", \"temperature\": 0.0, \"max_tokens\": 1000}")

# Echo curl command if debug mode is on
if [ $DEBUG -eq 1 ]; then
  echo "Debug mode ON."
  echo "curl -s 'https://api.openai.com/v1/completions' -H 'Content-Type: application/json' -H 'Authorization: Bearer $token' --data-binary @- <<< '{\"model\": \"gpt-3.5-turbo-instruct\", \"prompt\": \"$prompt\", \"temperature\": 0.0, \"max_tokens\": 1000}'"
fi

# Handle API errors
error=$(echo "$response" | jq -r '.error.message')
if [ "$error" != "null" ]; then
    echo -e "\033[0m" # Reset color
    echo "Error from OpenAI API:"
    echo $error
    echo "Aborted."
    exit 1
fi

# Output the result
result=$(echo "$response" | jq -r '.choices[0].text')
echo -e -n "\033[0;31m" # Set color to red
echo $result

# Additional code remains unchanged...

# If in command mode (pls or porfa), ask the user for confirmation
if [ $COMMAND_MODE -eq 1 ]; then
    echo -e -n "\033[0;34m" # Set color to blue

    p="Press any button to execute, or n to cancel: "
    if [ $SPANISH_MODE -eq 1 ]; then
        p="Presiona cualquier tecla para ejecutar, o n para cancelar: "
    fi

    read -n 1 -s -r -p "$p"
	
    if [[ $REPLY =~ ^[Nn]$ ]]; then
        echo -e "\033[0m" # Reset color
        echo $REPLY
        echo "Aborted."
        exit 0
    fi
    echo -e -n "\033[0;32m" # Set color to green
    echo $REPLY
    echo "Executing command..."
    echo ""
    # Re-enable globbing
    set +f
    # Execute the command
    echo -e "\033[0m" # Reset color
    eval "$result"
    # Navigate back to the original working directory
    cd $cwd
else
    # Re-enable globbing for pregunta mode
    set +f
    echo -e "\033[0m" # Reset color
fi
